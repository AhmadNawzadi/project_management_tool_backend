# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: pmt project CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: docker/cache-action@v2
        with:
          path: |
            ~/.docker/cache

      - name: Build frontend
        run: |
          cd project_management_tool_frontend
          docker build -t your-dockerhub-username/frontend:latest .

      - name: Build backend
        run: |
          cd project_management_tool_backend
          docker build -t your-dockerhub-username/backend:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push frontend image
        run: |
          docker push your-dockerhub-username/frontend:latest

      - name: Push backend image
        run: |
          docker push your-dockerhub-username/backend:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies and run tests (Frontend)
        run: |
          cd project_management_tool_frontend
          npm install
          npm test -- --watchAll=false

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adoptopenjdk'

      - name: Install Maven and run tests (Backend)
        run: |
          cd project_management_tool_backend
          mvn test

